---
author: "Duncan McDermott"
format: 
  pdf:
    code-overflow: wrap
    include-in-header:
      text: |
        \addtokomafont{disposition}{\rmfamily}
        \usepackage{fancyhdr}
---

\raggedright
\pagestyle{fancy}
\fancyhf{}
\fancyfoot[L]{Duncan McDermott}
\fancyfoot[R]{\thepage}
\renewcommand{\headrulewidth}{0pt}
\renewcommand{\footrulewidth}{0.4pt}

\begin{center} \includegraphics[width=0.3\columnwidth]{wm_vertical_single_line_full_color} \end{center}

\begin{center} {\Large Swinging For the Fences: Analysis of Major League Baseball Home Runs\par} \end{center}
\begin{center} {May 2024} \end{center}
\ 

\begin{center} {\large \textbf{Executive Summary}\par} \end{center}


- In this analysis I will be looking at a variety of metrics to see what causes more home runs in Major League Baseball (MLB), such as exit velocity, launch angle, stadium friendliness, and weather.
- The home run dataset I used comes from the website data world (<https://data.world>). I later merged a weather dataset which I got from the baseballr package available in R.
- I am assuming that both of these data sets are providing accurate, unbiased information that will allow me to draw appropriate conclusions.

Notable Findings:


- The majority of home runs are fly balls (43,908) occurring between 24-30 degrees of launch angle
- The bulk of home runs occur at exit velocities from 100-110 mph. 
- The average home run in the dataset only goes out in 23/30 mlb parks - The top 2 most hitter friendly parks in terms of total home runs hit are Oriole Park at Camden Yards and Great American Ballpark (Reds). The most unfriendly is PNC Park (Pirates).
- Temperature/wind don't have a large effect on home run hitting
- Type of day seems to matter slightly (sunny vs. cloudy, etc.)

Limitations:
 

- It would have been helpful to have an overall at bat dataset alongside my only home run dataset 
- It was difficult to get a definitive answer to the most and least friendly ballparks because a lot of new stadiums were being built in the date range of our data.

\newpage

# Overview
My final project delves into MLB statistics, particularly home runs, aiming to uncover valuable insights in baseball. With the rise of analytics, every major league team now has its own analytics department, highlighting the profound impact data-driven strategies have on team performance and financial efficiency. Uncovering answers to my research questions on home runs could thus provide a potential competitive edge.

My research questions are:

- What is the optimal exit velocity and launch angle for hitting home
    runs?
- What stadiums are the most hitter friendly/have the most home runs - does weather have an impact?
 

# Data Source and Assumptions
I got my dataset from Data World (<https://data.world>), a platform where users upload datasets used for projects. Similar to Kaggle, Data World fosters a community feel and offers valuable insights, including data types and descriptive statistics. Given all the above, I trust Data World as a reliable source. I got my weather dataset from the baseballr package in R. Being that it is a built in package to the software, and it matches my other data, I have good reason to trust it. I am assuming all data is accurate and unbiased.
 

# Data Cleaning Process 
To clean the homerun dataset I dropped unneeded columns and renamed the remaining. I created a variable to assign different contact types to each home run based on its launch angle. I edited problematic/missing data for ease of use and created a stadium firendliness variable. I then prepared my weather dataset to merge with my home run dataset by changing the name, data types, and capitalization of like columns so that they matched and were ready for merging. After merging, I selected relevant columns I would be using for the analysis, and omitted NA weather values.
 

# Notable Findings
***Finding 1.*** As seen in Table 1, the majority of home runs are fly balls. On average, line drive home runs have a launch angle of ~23, with fly ball home runs at ~30. Figure 1 provides a visual of the launch angle distribution - most home runs occur between a launch angle of 22.5-32.5. 

***Finding 2.*** Figure 2 is a scatterplot of exit velocity vs. distance of home runs. We observe a strong positive relationship, meaning exit velocity is an important indicator of distance (and thus home run) potential. The red dashed lines represent the 90th percentile of each variable. Table 2 shows how higher exit velocity intervals are associated with longer home run distances, supporting our findings in Figure 2.

***Finding 3.*** Figure 3 shows that the average home run in this dataset only goes out in 23/30 MLB parks from its red dashed line. This leads us to Table 3, where we can see the the most hitter friendly parks are Oriole Park at Camden Yards and Great American Ballpark (Reds). We can see that the unfriendly ones are new stadiums, so this isn't a good representation of their true friendliness. Getting rid of these new stadiums, the least friendly stadium that was around for the entire duration of our analysis is PNC Park (Pirates).

***Finding 4.*** Figure 4 shows the proportional differences of temperature in all games vs. the temperature on days home runs were hit. If the home run bar is higher than the all games bar, then home runs are hit in a higher proportion on days of that temperature. For example, at the highest point of 72F, we can look at the direct comparison in Table 4, where 7.1% of home runs were hit at this temperature, compared to only 6.9% of games being played at this temperature. This means that home runs have a higher tendency of being hit at 72F. However, there doesn't seem to be a particular pattern of more home runs being hit during certain temperatures as seen in the difference column, which makes it seem like these results are fairly random.

***Finding 5.*** Figure 5 tells us the type of day seems to matter when it comes to home run occurrence. It compares the percentage of home runs hit on certain day types compared to the overall games played on certain day types. Table 5 depicts this numerically, where partly cloudy, cloudy, and roof closed days each have a 1.5-2.1 higher home run occurrence percentage than games played percentage on that day type. On the other hand, a sunny day seems to produce a massive penalty to home run hitting as evidenced by the differential.

# Limitations
Having a dataset of every at bat during 2006-2017 alongside my home run dataset from that time period would've improved my findings. Comparing home runs and their associated metrics with other types of at bat results for further robustness checks would've been useful. This is something to consider for the future.

Determining the most and least friendly stadiums proved difficult because a lot of new stadiums were being built in the date range of my data. Thus, there were a handful of stadiums with relatively less years compared to others in the dataset, so their friendliness score wasn't accurate. If I could have found a time period with very little stadium turnover rates, the results for this would've been clearer and more accurate.


\newpage 


```{r setup}
#| include: false
#Load packages and set any options or constants, ensuring all chunks of code are rendered; be sure to comment your code throughout the file

# options
knitr::opts_chunk$set(echo = FALSE, tidy.opts = list(width.cutoff = 65), tidy = TRUE) #CHANGED_HERE: Set to FALSE to help suppress code

options(width = 60,
        scipen = 999999,
        dplyr.summarise.inform = F) 

# hide tidyverse start up
suppressPackageStartupMessages(library(tidyverse))


# libraries
library(dplyr)
library(kableExtra)
library(ggplot2)

```

```{r}
#| include: false
#Read in data...
# 2006-2017 MLB home run data
hr.df.read <- read.csv("https://query.data.world/s/ocmu3u2i5thmhuevcrvxhcudoxe3ms?dws=00000", header=TRUE, stringsAsFactors=FALSE)

# View structure
str(hr.df.read)
```
```{r}
#| include: false
# step 1
hr.step.1 <- hr.df.read %>%
  select(-RECORDID, -VIDEO, -PATH) %>% # drop these columns
  rename_all(tolower) %>% # make all columns lowercase
  rename(launch_angle = elevation_angle) # rename new = old
str(hr.step.1) # updated structure
```
```{r}
#| include: false
# step 2
hr.step.2 <- hr.step.1 %>%
  # creating new column, contact_type - case_when will create categories within this column based on above launch angle parameters.
  mutate(contact_type = case_when(
    launch_angle < 10 ~ "Ground Ball",
    launch_angle >= 10 & launch_angle <= 25 ~ "Line Drive",
    launch_angle > 25 & launch_angle <= 50 ~ "Fly Ball",
    launch_angle > 50 ~ "Pop Up"
  ))

# example of how contact_type works
head(hr.step.2[c('launch_angle','contact_type')])
```
```{r}
#| include: false
# making new frame that just includes ground ball home runs
ground.balls <- hr.step.2 %>%
    filter(contact_type == "Ground Ball")

# exit velocity and launch angle of the ground ball home runs
head(ground.balls[c("exit_velocity","launch_angle")])


# edited ground ball frame that just includes non 0 instances of launch angle (measurement error)
ground.balls.2 <- hr.step.2 %>%
  filter(contact_type == "Ground Ball" & launch_angle > 0)

# View
str(ground.balls.2)

# filtered data frame where all of our metrics have values that aren't zero
hr.step.3<- hr.step.2 %>%
  filter(
    exit_velocity != 0 &
      launch_angle != 0 &
      apex != 0 &
      true_distance != 0 &
      horizontal_angle != 0)

# now the minimum exit velocity is 69.9 mph
summary(hr.step.3$exit_velocity)
```

```{r}
#| include: false
# batters that hit the most home runs from 2006-2017
hr.hit <- hr.step.3 %>%
  group_by(batter) %>%
  summarize(hr_hit = n()) %>% # create count variable that sums total appearances of the batter name
  arrange(desc(hr_hit)) # list from highest to lowest

# how many unique home run hitters
dim(hr.hit)[1]

# top home run hitters
head(hr.hit)
```

```{r}
#| include: false
# create stadium friendliness
stadium.friendliness <- hr.step.3 %>%
  group_by(ballpark) %>%
  summarize(total_home_runs = n()) %>% # will assign total home runs per ballpark
  ungroup() %>% # ungroup for later calculation purposes
  mutate(stadium_friendliness_measure = case_when( # case_when creates new measure with categories below
    total_home_runs > quantile(total_home_runs, 0.75) ~ "Very Friendly",
    total_home_runs > quantile(total_home_runs, 0.5) & total_home_runs <= quantile(total_home_runs, 0.75) ~ "Friendly",
    total_home_runs > quantile(total_home_runs, 0.25) & total_home_runs <= quantile(total_home_runs, 0.5) ~ "Not Friendly",
    total_home_runs <= quantile(total_home_runs, 0.25) ~ "Unfriendly"
  ))

# quick view
head(stadium.friendliness)

```

```{r}
#| include: false
hr.clean <- hr.step.3
```


# Data Visualizations and Tables

## Figure 1. Launch Angle For Home Runs
```{r}
# Create histogram with ggplot
ggplot(hr.clean, aes(x = launch_angle)) +
  geom_histogram(binwidth = 5, fill = "lightblue", color = "black") + # makes each bin 5 degrees wide
  labs(title = "Histogram of Launch Angle for Home Runs",
       x = "Launch Angle (degrees)",
       y = "Frequency") +
  scale_x_continuous(breaks = seq(0, 50, by = 5)) +
  theme_minimal()
```

## Table 1. Contact Type For Home Runs
```{r}

# frequency counts for type of contact on home run balls, and associated launch angles
contact_la <- hr.clean %>%
  select(launch_angle, contact_type) %>%
  group_by(contact_type) %>%
  summarise(count = n(),
            mean.launch.angle = mean(launch_angle)
            )

#contact_la
kbl(contact_la, booktabs = TRUE) %>%
  kable_styling(latex_options = c("striped", "HOLD_position")) 
```

\newpage

## Figure 2. Exit Velocity
```{r}

# create variables of 90th percentile for exit velocity and distance - represented by dashed line
exit_velocity_90 <- quantile(hr.clean$exit_velocity, 0.9)
true_distance_90 <- quantile(hr.clean$true_distance, 0.9)

# Scatter plot of exit velocity and distance
ggplot(hr.clean, aes(x = exit_velocity, y = true_distance)) +
  geom_point() +
  labs(title = "Exit Velocity vs. Distance",
       x = "Exit Velocity (MPH)",
       y = "Distance (Feet)") +
  geom_hline(yintercept = true_distance_90, linetype = "dashed", color = "red") +
  geom_vline(xintercept = exit_velocity_90, linetype = "dashed", color = "red")


```


## Table 2. Exit Velocity
```{r}

# frequency counts for exit velocity intervals and associated average home run distance
ev_td <- hr.clean %>%
  mutate(ev_interval = cut(exit_velocity, breaks = seq(60, 150, by = 5), right = FALSE)) %>%
  select(ev_interval, true_distance) %>%
  group_by(ev_interval) %>%
  summarise(count = n(),
            mean.distance = mean(true_distance)
            )


kbl(ev_td, 
      col.names = c("Exit Velocity Interval", "Count", "Avg. Distance"),
      escape = FALSE) %>%
  kable_styling(latex_options= c("striped", "HOLD_position"))


```

\newpage

## Figure 3. Stadium Friendliness
```{r}

mean_num_of_parks <- mean(hr.clean$num_of_parks) # create mean variable to add to boxplot

# Create boxplot with ggplot
ggplot(hr.clean, aes(x = "", y = num_of_parks)) +
  geom_boxplot(fill = "green", color = "black") +
  geom_hline(yintercept = mean_num_of_parks, linetype = "dashed", color = "red") +  # Add mean line
  labs(title = "Home Run in How Many Ballparks?",
       x = NULL, 
       y = "Ballparks") +
  theme_minimal()

```
## Table 3. Stadium Friendliness
```{r}
# Arrange the data frame in descending order of total home run count
stadium_friendliness_sorted <- stadium.friendliness %>%
  filter(total_home_runs > 10) %>% # to avoid special games being played at stadiums rarely
  arrange(desc(total_home_runs)) # order from most to least

# Select the top 5 and bottom 5 stadiums
top_5_stadiums <- stadium_friendliness_sorted %>% slice_head(n = 5)
bottom_5_stadiums <- stadium_friendliness_sorted %>% slice_tail(n = 5)

# Combine top 5 and bottom 5 stadiums into one data frame
top_and_bottom_stadiums <- bind_rows(top_5_stadiums, bottom_5_stadiums)

# kbl table
kable(top_and_bottom_stadiums, 
      col.names = c("Ballpark", "Home Run Count", "Stadium Friendliness"),
      escape = FALSE) %>%
  kable_styling(latex_options = c("striped", "HOLD_position"))
```


\newpage 


## Figure 4. Temperature
```{r}
# | include: false
# Rename venue_name to ballpark in baseball_weather
baseball_weather <- baseballr::get_game_info_sup_petti() %>%
  rename(ballpark = venue_name)

# Check data types
#str(hr.clean)
#str(baseball_weather)

# Different data types on ballpark and game date why prior merges weren't working correctly

# Normalize game_date and ballpark data types between datasets

# Convert game_date to Date format and normalize ballpark in hr.clean. To lower matched roughly another 1000 ballparks, may need to cite date format

hr.norm <- hr.clean %>%
  mutate(
    game_date = as.Date(game_date, format = "%Y-%m-%d"),
    ballpark = tolower(as.character(ballpark))
  )

# Convert game_date to Date format and normalize ballpark in baseball_weather
baseball_weather.norm <- baseball_weather %>%
  mutate(
    game_date = as.Date(game_date, format = "%Y-%m-%d"),
    ballpark = tolower(as.character(ballpark))
  )

# Merge on game_date and ballpark
hr.merged <- merge(hr.norm, baseball_weather.norm, by = c("game_date", "ballpark"), all.x = TRUE)

# Remove NA columns that don't match; dates have different ranges
hr.clean.merge <- na.omit(hr.merged)
#View(hr.clean.merge)

#str(hr.clean.merge)

# Subset relevant columns
subset_data <- hr.clean.merge %>%
  select(true_distance, exit_velocity, launch_angle, temperature, other_weather, wind)

# Handle missing values (if any)
subset_data <- na.omit(subset_data)  # Remove rows with missing values

```
```{r}

# home run proportions for every temperature

temperature_counts <- prop.table(table(hr.clean.merge$temperature))

# overall games played proportions for every temperature

temperature_counts2 <- prop.table(table(baseball_weather.norm$temperature))

# turn into data frames
temperature_counts <- data.frame(temperature_counts)
temperature_counts2 <- data.frame(temperature_counts2)

# Add group indicator so that we can combine and compare
temperature_counts$Group <- "All Home Runs"
temperature_counts2$Group <- "All Games"


# Combine data
combined_data <- rbind(temperature_counts, temperature_counts2)

combined_data$Var1 <- as.numeric(as.character(combined_data$Var1))

# Create plot
ggplot(combined_data, aes(x = Var1, y = Freq, fill = Group)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(title = "Comparison of Proportion Tables",
       x = "Temperature (Degrees Fahrenheit)",
       y = "Proportion") +
  scale_x_continuous(breaks = seq(min(combined_data$Var1), max(combined_data$Var1), by = 10)) +  # Set breaks every 10 degrees
  theme_minimal()

```
## Table 4. Temperature
```{r}
# Pivot the data into wider format
combined_data_wide <- combined_data %>%
  pivot_wider(names_from = Group, values_from = Freq) %>% # To view both side by side
  mutate(`All Home Runs` = `All Home Runs` * 100) %>%
  mutate(`All Games` = `All Games` * 100) %>% # get into more readable format for comparison
  mutate(Difference = `All Home Runs` - `All Games`) %>% # Difference between groups
  filter(Var1 >= 65 & Var1 <= 75) # filter to bulk of temperature games are played at

kable(combined_data_wide, caption = "Combined Temperature Percentages", 
      col.names = c("Temperature", "All Home Runs", "All Games", "Difference"),
      escape = FALSE) %>%
  kable_styling(latex_options = c("striped", "HOLD_position"))

```

## Figure 5. Type of Day
```{r}
# Calculate the proportion of each day type category in hr.clean.merge dataset
prop_hr_daytype <- prop.table(table(hr.clean.merge$other_weather)) * 100

# Get the top day types with proportions for hr.clean.merge dataset
top_hr_daytype <- sort(prop_hr_daytype, decreasing = TRUE)[1:11]

# Calculate the proportion of each day type category in weather dataset
prop_all_daytype <- prop.table(table(baseball_weather.norm$other_weather)) * 100

# Get the top 5 day types with proportions for weather dataset
top_all_daytype <- sort(prop_all_daytype, decreasing = TRUE)[1:11]


# make into data frame
top_hr_daytype <- data.frame(top_hr_daytype)

top_all_daytype <- data.frame(top_all_daytype)

# Add group indicator
top_hr_daytype$Group <- "Home Run %"
top_all_daytype$Group <- "Weather Occurrence %"

combined_data_daytype <- rbind(top_hr_daytype, top_all_daytype)


library(ggplot2)
ggplot(combined_data_daytype, aes(x = Var1, y = Freq, fill = Group)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(title = "Impact of the Type of Day on Home Runs",
       x = "Category",
       y = "Percentage") +
  theme_minimal() +
  theme(axis.text.x = element_text(size = 4)) #adjust tick label size so they don't overlap

```
## Table 5. Type of Day
```{r}
# Pivot the data into wider format
combined_data_wide_daytype <- combined_data_daytype %>%
  pivot_wider(names_from = Group, values_from = Freq) %>% # To view both side by side
  mutate(Difference = `Home Run %` - `Weather Occurrence %`)
  
kable(combined_data_wide_daytype, caption = "Combined Day Type Percentages", 
      col.names = c("Day Type", "Home Run %", "Weather Occurrence %", "Difference"),
      escape = FALSE) %>%
  kable_styling(latex_options = c("striped", "HOLD_position"))

```






